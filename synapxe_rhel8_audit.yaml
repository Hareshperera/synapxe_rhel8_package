AWSTemplateFormatVersion: '2010-09-09'
Description: 'Synapxe RHEL8 Audit Configuration and Automation'

Parameters:
  ScheduleExpression:
    Type: String
    Default: 'rate(7 days)'
    Description: 'Schedule for running the audit (using AWS EventBridge rate expression)'

Resources:
  AuditS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "rhel8-audit-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AuditRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ssm.amazonaws.com
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: AuditS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "${AuditS3Bucket.Arn}/*"

  AuditSSMDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: 'Run RHEL8 Security Audit'
        parameters: {}
        mainSteps:
          - action: aws:runShellScript
            name: auditScript
            inputs:
              runCommand:
                - |
                  #!/bin/bash
                  # Create secure results directory
                  RESULT_DIR="/var/log/synapxe_audit"
                  RESULT_FILE="${RESULT_DIR}/synapxe_rhel8_audit_results.txt"
                  mkdir -p "${RESULT_DIR}"
                  chmod 750 "${RESULT_DIR}"

                  # Check for root privileges
                  if [ "$(id -u)" -ne 0 ]; then
                    echo "Error: This script must be run as root" >&2
                    exit 1
                  fi

                  # Install required packages if not present
                  for pkg in nftables firewalld; do
                    if ! rpm -q "$pkg" >/dev/null 2>&1; then
                      dnf install -y "$pkg"
                    fi
                  done

                  # Run the audit checks
                  # Chapter 1 - Initial Setup
                  echo "[$(date '+%Y-%m-%d %H:%M:%S')] Starting Chapter 1 - Initial Setup" >> "$RESULT_FILE"
                  
                  # Kernel Module Checks
                  echo "\nChecking Kernel Modules:" >> "$RESULT_FILE"
                  for mod in cramfs freevxfs jffs2 hfs hfsplus squashfs udf vfat; do
                    if ! lsmod | grep -q "^$mod"; then
                      echo "[PASS] $mod is not loaded" >> "$RESULT_FILE"
                    else
                      echo "[FAIL] $mod is loaded" >> "$RESULT_FILE"
                    fi
                  done

                  # File System Checks
                  echo "\nChecking File Systems:" >> "$RESULT_FILE"
                  mount | grep -E '/tmp|/var|/var/tmp|/var/log|/var/log/audit|/home|/dev/shm' >> "$RESULT_FILE"

                  # SELinux Check
                  echo "\nChecking SELinux:" >> "$RESULT_FILE"
                  if getenforce | grep -q "Enforcing"; then
                    echo "[PASS] SELinux is enforcing" >> "$RESULT_FILE"
                  else
                    echo "[FAIL] SELinux is not enforcing" >> "$RESULT_FILE"
                  fi

                  # Upload results to S3
                  aws s3 cp "$RESULT_FILE" "s3://${AUDIT_BUCKET}/reports/${HOSTNAME}/$(date '+%Y%m%d')/"
                  aws s3 cp "${RESULT_FILE}.html" "s3://${AUDIT_BUCKET}/reports/${HOSTNAME}/$(date '+%Y%m%d')/"

  AuditAutomation:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Schedule RHEL8 Security Audit'
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:document/${AuditSSMDocument}'
          Id: 'RunAudit'
          RoleArn: !GetAtt AuditRole.Arn
          RunCommandParameters:
            RunCommandTargets:
              - Key: tag:OS
                Values: ['RHEL8']

Outputs:
  AuditBucketName:
    Description: 'Name of the S3 bucket storing audit results'
    Value: !Ref AuditS3Bucket

  AuditDocumentName:
    Description: 'Name of the SSM document for running audits'
    Value: !Ref AuditSSMDocument